(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"./logic/allPass.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),m=a.n(t),o=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e,n){if(null==e)return{};var a,t,m=function(e,n){if(null==e)return{};var a,t,m={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(m[a]=e[a]);return m}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(m[a]=e[a])}return m}n.default=function(e){var n=e.components;r(e,["components"]);return m.a.createElement(o.MDXTag,{name:"wrapper",components:n},m.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"logicallpass"}},"logic/allPass"),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"allPass :: [Function] -> Any -> Boolean")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Takes an ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Array")," of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"predicates")," and returns ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," if all ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"predicates")," are ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true"),"."),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"example"}},"Example"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript",metaString:""}},"import log from 'mojiscript/console/log'\nimport pipe from 'mojiscript/core/pipe'\nimport run from 'mojiscript/core/run'\nimport map from 'mojiscript/list/map'\nimport allPass from 'mojiscript/logic/allPass'\n\nconst isFizz = num => num % 5 == 0\nconst isBuzz = num => num % 3 == 0\nconst isFizzBuzz = allPass ([ isFizz, isBuzz ])\n\nconst main = pipe ([\n  [ 5, 10, 15 ],\n  map (isFizzBuzz),\n  log\n])\n\nrun ({ main })\n//=> [ false, false, true ]\n")),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"parameters"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"table",components:n},m.a.createElement(o.MDXTag,{name:"thead",components:n,parentName:"table"},m.a.createElement(o.MDXTag,{name:"tr",components:n,parentName:"thead"},m.a.createElement(o.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Name"),m.a.createElement(o.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Type"),m.a.createElement(o.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Description"))),m.a.createElement(o.MDXTag,{name:"tbody",components:n,parentName:"table"},m.a.createElement(o.MDXTag,{name:"tr",components:n,parentName:"tbody"},m.a.createElement(o.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"predicates"),m.a.createElement(o.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"[Function]")),m.a.createElement(o.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"An ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"Array")," of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"predicates")," to apply to each item in the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"Iterable"),".")),m.a.createElement(o.MDXTag,{name:"tr",components:n,parentName:"tbody"},m.a.createElement(o.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"value"),m.a.createElement(o.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"Any")),m.a.createElement(o.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"Value to test.")))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"returns"}},"Returns"),m.a.createElement(o.MDXTag,{name:"p",components:n},"Returns ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," if all ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"predicates")," are ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true"),", otherwise ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"false"),"."))}}}]);