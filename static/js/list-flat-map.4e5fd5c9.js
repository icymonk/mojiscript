(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./list/flatMap.mdx":function(e,a,n){"use strict";n.r(a);var t=n("./node_modules/react/index.js"),m=n.n(t),r=n("./node_modules/@mdx-js/tag/dist/index.js");function p(e,a){if(null==e)return{};var n,t,m=function(e,a){if(null==e)return{};var n,t,m={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(m[n]=e[n]);return m}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(m[n]=e[n])}return m}a.default=function(e){var a=e.components;p(e,["components"]);return m.a.createElement(r.MDXTag,{name:"wrapper",components:a},m.a.createElement(r.MDXTag,{name:"h1",components:a,props:{id:"listflatmap"}},"list/flatMap"),m.a.createElement(r.MDXTag,{name:"p",components:a},m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"flatMap :: Function -> FlatMapable -> Any")),m.a.createElement(r.MDXTag,{name:"p",components:a},"Takes a function and a ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FlatMapable")," and returns an ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Object"),"."),m.a.createElement(r.MDXTag,{name:"p",components:a},"A ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FlatMapable")," could be an ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Array"),", an ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Iterator"),", or ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"async Iterator"),", or an object that implements 'flatMap'."),m.a.createElement(r.MDXTag,{name:"h2",components:a,props:{id:"array-example"}},"Array Example"),m.a.createElement(r.MDXTag,{name:"pre",components:a},m.a.createElement(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-javascript",metaString:""}},"import flatMap from 'mojiscript/list/flatMap'\n\nconst andTimesTen = num => [ num, num * 10 ]\nconst array = [ 1, 2, 3 ]\n\nflatMap (andTimesTen) (array) //=> [ 1, 10, 2, 20, 3, 30 ]\n")),m.a.createElement(r.MDXTag,{name:"h2",components:a,props:{id:"iterator-example"}},"Iterator Example"),m.a.createElement(r.MDXTag,{name:"pre",components:a},m.a.createElement(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-javascript",metaString:""}},"import map from 'mojiscript/list/map'\nimport range from 'mojiscript/list/range'\n\nconst andTimesTen = num => [ num, num * 10 ]\nconst array = [ 1, 2, 3 ]\n\nflatMap (andTimesTen) (range (1) (4)) //=> [ 1, 10, 2, 20, 3, 30 ]\n")),m.a.createElement(r.MDXTag,{name:"h2",components:a,props:{id:"async-example"}},"Async Example"),m.a.createElement(r.MDXTag,{name:"pre",components:a},m.a.createElement(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-javascript",metaString:""}},"import flatMap from 'mojiscript/list/flatMap'\nimport pipe from 'mojiscript/core/pipe'\nimport sleep from 'mojiscript/threading/sleep'\n\nconst andTimesTen = num => [ num, num * 10 ]\nconst asyncAndTimesTen = pipe ([\n  sleep (1000), // <-- async function!\n  andTimesTen\n])\nconst array = [ 1, 2, 3 ]\n\nflatMap (asyncAndTimesTen) (array) //=> Promise ([ 1, 10, 2, 20, 3, 30 ]\u200b\u200b\u200b\u200b\u200b)\n")),m.a.createElement(r.MDXTag,{name:"h2",components:a,props:{id:"parameters"}},"Parameters"),m.a.createElement(r.MDXTag,{name:"table",components:a},m.a.createElement(r.MDXTag,{name:"thead",components:a,parentName:"table"},m.a.createElement(r.MDXTag,{name:"tr",components:a,parentName:"thead"},m.a.createElement(r.MDXTag,{name:"th",components:a,parentName:"tr",props:{align:null}},"Name"),m.a.createElement(r.MDXTag,{name:"th",components:a,parentName:"tr",props:{align:null}},"Type"),m.a.createElement(r.MDXTag,{name:"th",components:a,parentName:"tr",props:{align:null}},"Description"))),m.a.createElement(r.MDXTag,{name:"tbody",components:a,parentName:"table"},m.a.createElement(r.MDXTag,{name:"tr",components:a,parentName:"tbody"},m.a.createElement(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"function"),m.a.createElement(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"Function")),m.a.createElement(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"Function to apply to each item in the ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"Iterable"),".")),m.a.createElement(r.MDXTag,{name:"tr",components:a,parentName:"tbody"},m.a.createElement(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"mappable"),m.a.createElement(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"FlatMapable")),m.a.createElement(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"FlatMapable")," to apply the function to.")))),m.a.createElement(r.MDXTag,{name:"h2",components:a,props:{id:"returns"}},"Returns"),m.a.createElement(r.MDXTag,{name:"p",components:a},"Returns an ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Object")," with the function applied to the ",m.a.createElement(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FlatMapable"),"."))}}}]);