(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"./logic/ifError.mdx":function(e,n,r){"use strict";r.r(n);var o=r("./node_modules/react/index.js"),t=r.n(o),a=r("./node_modules/@mdx-js/tag/dist/index.js");function p(e,n){if(null==e)return{};var r,o,t=function(e,n){if(null==e)return{};var r,o,t={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}n.default=function(e){var n=e.components;p(e,["components"]);return t.a.createElement(a.MDXTag,{name:"wrapper",components:n},t.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"logiciferror"}},"logic/ifError"),t.a.createElement(a.MDXTag,{name:"p",components:n},t.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ifError :: Function -> Function -> Function -> Any -> Any")),t.a.createElement(a.MDXTag,{name:"p",components:n},"Error handler executes ",t.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onError")," if an error occurs, otherwise ",t.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onSuccess")," is executed."),t.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"example"}},"Example"),t.a.createElement(a.MDXTag,{name:"pre",components:n},t.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript",metaString:""}},"import log from 'mojiscript/console/log'\nimport pipe from 'mojiscript/core/pipe'\nimport run from 'mojiscript/core/run'\nimport ifError from 'mojiscript/logic/ifError'\nimport $ from 'mojiscript/string/template'\n\nconst state = 1\n\nconst toUpperCase = value => value.toUpperCase ()\n\nconst main = pipe ([\n  ifError (toUpperCase) ($`OOPS: ${0}`) ($`Value: ${0}`),\n  log\n])\n\nrun ({ state, main })\n// OOPS: TypeError: value.toUppercase is not a function\n")))}}}]);